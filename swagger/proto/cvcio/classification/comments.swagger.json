{
  "swagger": "2.0",
  "info": {
    "title": "proto/cvcio/classification/comments.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CommentService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v3/classify/comment/toxicity": {
      "post": {
        "operationId": "CommentService_ClassifyToxic",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/classificationResponseToxic"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/classificationComment"
            }
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/v3/classify/comments/toxicity": {
      "post": {
        "operationId": "CommentService_ClassifyToxicList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/classificationResponseToxicList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/classificationCommentList"
            }
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    }
  },
  "definitions": {
    "classificationComment": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/commonMeta"
        }
      }
    },
    "classificationCommentList": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/classificationComment"
          }
        }
      }
    },
    "classificationResponseToxic": {
      "type": "object",
      "properties": {
        "predictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonPrediction"
          }
        },
        "meta": {
          "$ref": "#/definitions/commonMeta"
        }
      }
    },
    "classificationResponseToxicList": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/classificationResponseToxic"
          }
        }
      }
    },
    "commonMeta": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "screenName": {
          "type": "string"
        },
        "commentCreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "userCreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "classifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "link": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        },
        "threshold": {
          "type": "number",
          "format": "double"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "Meta message holds metadata for any user request (comments or accounts classification)\nUse @ threshold to adjust the probability boundary (default 0.5)\nUse @ version to choose the version of the classifier (accepts v1, v2, default v1)"
    },
    "commonPrediction": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "float"
        },
        "prediction": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
