syntax = "proto3";

package ministry;
// option go_package = "github.com/cvcio/proto/internal/ministry;ministry";

import "google/api/annotations.proto";
// import "google/protobuf/wrappers.proto";
import "tagger/tagger.proto";

import "proto/cvcio/ministry/session.proto";
// import "proto/cvcio/commons/common.proto";

message Credentials {
    string email = 1;
}

message Verification {
    string id = 1 [(tagger.tags) = "bson:\"_id,omitempty\""];
    string pin = 2;
}

message Token {
    string id = 1 [(tagger.tags) = "bson:\"_id,omitempty\"" ];
    string access_token = 2;
    string refesh_token = 3;
}

service AuthService {
    // authenticate user with magick link
    rpc Authenticate (Credentials) returns (Session) {
        option (google.api.http) = {
            post : "/v3/auth/authenticate"
            body : "*"
        };
    };
    // invite user with magick link
    rpc InviteWithMagic (Credentials) returns (commons.ResponseSuccess) {
        option (google.api.http) = {
            post : "/v3/auth/invite-with-magick"
            body : "*"
        };
    };
    // get the otpauth link and qr-code
    rpc GetVerificationLink (Verification) returns (Session) {
        option (google.api.http) = {
            get : "/v3/auth/verify/{id}"
        };
    };
    // verify user with a predefined 2fa method
    rpc Verify (Verification) returns (Token) {
        option (google.api.http) = {
            post : "/v3/auth/verify/{id}"
            body : "*"
        };
    };
    // authorize user with an external service such as google
    rpc Authorize (Credentials) returns (Token) {
        option (google.api.http) = {
            post : "/v3/auth/authorize"
            body : "*"
        };
    };
    // generate token
    rpc GenerateToken (Token) returns (Token) {
        option (google.api.http) = {
            post : "/v3/auth/token"
            body : "*"
        };
    };
    // refresh token
    rpc RefreshToken (Token) returns (Token) {
        option (google.api.http) = {
            post : "/v3/auth/token/refresh"
            body : "*"
        };
    };
}